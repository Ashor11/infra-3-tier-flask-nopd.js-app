trigger:
  branches:
    include:
      - main
pool:
  name: Default

variables:
  - group: my-secrets

stages:

- stage: configure
  jobs:
   - job: aws
     steps:
      - checkout: self
      - script: |
            echo "Configuring AWS credentials..."
            aws configure set aws_access_key_id $(aws_access_key_id)
            aws configure set aws_secret_access_key $(aws_secret_access_key)
            aws configure set region us-east-1
            if [ -n "$(aws_session_token)" ]; then
              aws configure set aws_session_token $(aws_session_token)
            fi
            aws sts get-caller-identity
        displayName: 'Configure AWS Credentials'
        env:
            AWS_ACCESS_KEY_ID: $(aws_access_key_id)
            AWS_SECRET_ACCESS_KEY: $(aws_secret_access_key)
            AWS_SESSION_TOKEN: $(aws_session_token)
      - script: |
             echo "Checking AWS credentials..."
             echo "AWS_ACCESS_KEY_ID: $(aws_access_key_id)"
             echo "AWS_SECRET_ACCESS_KEY: $(aws_secret_access_key)"
             echo "AWS_SESSION_TOKEN: $(aws_session_token)" 
        displayName: 'Check AWS Credentials'


- stage: provision
  dependsOn: configure
  jobs:
    - job: Terraform
      steps:
        - script: terraform fmt
          displayName: 'Terraform Format'
          condition: succeeded()

        - script: terraform init
          displayName: 'Terraform Init'
          condition: succeeded()

        - script: terraform plan -out=tfplan
          displayName: 'Terraform Plan'
          condition: succeeded()

        - script: terraform apply -auto-approve tfplan
          displayName: 'Terraform Apply'
          condition: succeeded()

- stage: availableilbility
  dependsOn: provision
  jobs:
    - job: k8s
      steps:
        - checkout: self
        - script: |
            aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster
          displayName: 'Update kubeconfig'
          
        - script: |
            kubectl get nodes -A
          displayName: 'Check nodes'
          condition: succeeded()
